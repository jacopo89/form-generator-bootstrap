import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Col, Row, Spinner } from 'react-bootstrap';
const DropzonePreview = ({ meta, fileWithMeta }) => {
    const { remove } = fileWithMeta;
    const { name, status, previewUrl, size } = meta;
    return (_jsxs(Row, Object.assign({ className: "sw-40 border border-1 border-separator g-0 rounded-sm me-2 mb-2 position-relative z-index-1" }, { children: [_jsxs(Col, Object.assign({ xs: "auto", className: "position-relative" }, { children: [previewUrl ? (_jsx("img", { src: previewUrl, alt: "preview image", className: "sw-12 sh-9 rounded-sm-start" }, void 0)) : (_jsx("div", Object.assign({ className: "sw-12 sh-9 d-flex justify-content-center align-items-center" }, { children: _jsx("i", { className: "cs-file-text dzu-preview-icon" }, void 0) }), void 0)), (status === 'error_upload_params' || status === 'exception_upload' || status === 'error_upload') && (_jsx("div", Object.assign({ className: "dzu-preview-error" }, { children: _jsx("i", { className: "cs-close-circle" }, void 0) }), void 0)), status === 'done' && (_jsx("div", Object.assign({ className: "dzu-preview-success" }, { children: _jsx("i", { className: "cs-check" }, void 0) }), void 0)), status !== 'error_upload_params' && status !== 'exception_upload' && status !== 'error_upload' && status !== 'done' && (_jsx("div", Object.assign({ className: "dzu-preview-spinner" }, { children: _jsx(Spinner, { animation: "border", size: "sm", variant: "primary", className: "dzu-spinner-border" }, void 0) }), void 0))] }), void 0), _jsx(Col, Object.assign({ className: "px-3 d-flex flex-column justify-content-center" }, { children: _jsxs("div", Object.assign({ className: "d-flex justify-content-between" }, { children: [_jsxs("div", { children: [_jsx("p", Object.assign({ className: "mb-1 pe-2 sw-20 dzu-preview-file-name" }, { children: name }), void 0), _jsxs("div", Object.assign({ className: "text-small text-primary" }, { children: [Math.round(size / 1000), " KB"] }), void 0)] }, void 0), status !== 'preparing' && status !== 'getting_upload_params' && status !== 'uploading' && (_jsx("button", Object.assign({ className: "btn btn-link p-0 sh-3 text-muted", type: "button", onClick: remove }, { children: _jsx("i", { className: "cs-bin" }, void 0) }), void 0))] }), void 0) }), void 0)] }), void 0));
};
export default DropzonePreview;
